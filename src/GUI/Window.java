/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Algo.Graph;
import Algo.MatrixCreator;

import java.awt.GridLayout;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author Yos Amichay
 */
@SuppressWarnings("serial")
public class Window extends javax.swing.JFrame {

	private final int cols;
	private final int rows;
	MyButton[] buttons;
	Graph graph;
	private final MatrixCreator matrixCreator;
	JOptionPane jop;

	/**
	 * Creates new form Window
	 */
	public Window() {
		initComponents();
		jop = new JOptionPane();
		String stringSize = JOptionPane.showInputDialog("Please, enter the board size, N  \n N<=8");
		int intSize = checkTheInput(stringSize);

		matrixCreator = new MatrixCreator(intSize, intSize);

		getBoardSize().setText(intSize + " x " + intSize);
		graph = new Graph();
		this.cols = graph.getCols();
		this.rows = graph.getCols();
		buttons = new MyButton[cols * rows];
		panel.setLayout(new GridLayout(rows, cols, 5, 5));

		int place = 0;
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < cols; j++) {
				buttons[place] = new MyButton(i, j, this, graph);
				panel.add(buttons[place]);
				place++;
			}
		}
		JOptionPane.showMessageDialog(null, "For indication, press on the desired button");

	}

	public JTextArea getBoardSize() {
		return boardSize;
	}

	public JTextArea getIndexField() {
		return indexField;
	}

	public JTextArea getIndicationText() {
		return indicationText;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		CreatrMtrix = new javax.swing.JButton();
		panel = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		indicationText = new javax.swing.JTextArea();
		jScrollPane2 = new javax.swing.JScrollPane();
		indexField = new javax.swing.JTextArea();
		jScrollPane3 = new javax.swing.JScrollPane();
		boardSize = new javax.swing.JTextArea();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		jLabel1.setText("Matrix");

		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		jLabel2.setText("Indication");

		jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		jLabel3.setText("The common attribute of");

		jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		jLabel4.setText(":");

		jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		jLabel5.setText("board size:");

		CreatrMtrix.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		CreatrMtrix.setText("Create new matrix");
		CreatrMtrix.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				CreatrMtrixActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
		panel.setLayout(panelLayout);
		panelLayout.setHorizontalGroup(
				panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 550, Short.MAX_VALUE)
				);
		panelLayout.setVerticalGroup(
				panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 338, Short.MAX_VALUE)
				);

		indicationText.setColumns(20);
		indicationText.setFont(new java.awt.Font("David", 0, 14)); // NOI18N
		indicationText.setRows(5);
		jScrollPane1.setViewportView(indicationText);

		jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

		indexField.setColumns(20);
		indexField.setRows(5);
		jScrollPane2.setViewportView(indexField);

		jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

		boardSize.setColumns(20);
		boardSize.setRows(5);
		jScrollPane3.setViewportView(boardSize);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(87, 87, 87)
						.addComponent(jLabel2)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(200, 200, 200))
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(layout.createSequentialGroup()
												.addGap(62, 62, 62)
												.addComponent(jLabel5)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(layout.createSequentialGroup()
														.addGap(23, 23, 23)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(layout.createSequentialGroup()
																		.addComponent(jLabel3)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(jLabel4))
																		.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
																		.addGroup(layout.createSequentialGroup()
																				.addGap(66, 66, 66)
																				.addComponent(CreatrMtrix)))
																				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																				.addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addContainerGap())
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addGap(20, 20, 20)
										.addComponent(jLabel2)
										.addGap(7, 7, 7))
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
												.addContainerGap()
												.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
														.addGroup(layout.createSequentialGroup()
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
																		.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(jLabel3)
																				.addComponent(jLabel4))
																				.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																				.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addGap(18, 18, 18)
																				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(jLabel5))
																						.addGap(18, 18, 18)
																						.addComponent(CreatrMtrix, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addGap(0, 53, Short.MAX_VALUE))
																						.addGroup(layout.createSequentialGroup()
																								.addGap(5, 5, 5)
																								.addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
																								.addContainerGap())
				);

		pack();
	}// </editor-fold>//GEN-END:initComponents


	private void CreatrMtrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreatrMtrixActionPerformed
		this.dispose();
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new Window().setVisible(true);
			}
		});
	}//GEN-LAST:event_CreatrMtrixActionPerformed
	/**
	 * @param args the command line arguments
	 */

	public static void main(String args[]) {

		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (Exception ex) {
			java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new Window().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton CreatrMtrix;
	private javax.swing.JTextArea boardSize;
	private javax.swing.JTextArea indexField;
	private javax.swing.JTextArea indicationText;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JPanel panel;
	// End of variables declaration//GEN-END:variables

	private int checkTheInput(String stringSize) {
		if (stringSize == null) {
			try {
				throw new Exception("Cancel button");
			} catch (Exception ex) {
				Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
		int size = Integer.parseInt(stringSize);
		if (size <= 0 || size > 8) {
			JOptionPane.showMessageDialog(null, "Insert a board size between 1 to 8");
			stringSize = JOptionPane.showInputDialog("Please, enter the board size. \n NxN \n N<7");
			return Integer.parseInt(stringSize);
		}
		while (stringSize != null && stringSize.equals("")) {
			JOptionPane.showMessageDialog(null, "Insert a board size!");
			stringSize = JOptionPane.showInputDialog("Please, enter the board size. \n NxN \n N<7");
		}
		return Integer.parseInt(stringSize);

	}

	public MatrixCreator getMatrixCreator() {
		return matrixCreator;
	}

}
